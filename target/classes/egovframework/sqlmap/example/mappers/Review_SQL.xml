<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.sample.service.impl.ReviewMapper">

	<resultMap id="review" type="egovframework.example.sample.service.ReviewVO">
		<result property="rv_id" column="rv_id"/>
		<result property="hpt_id" column="hpt_id"/>
		<result property="hpt_rate" column="hpt_rate"/>
		<result property="rv_title" column="rv_title"/>
		<result property="rv_content" column="rv_content"/>
		<result property="rv_reg_date" column="rv_reg_date"/>
		<result property="rv_image" column="rv_image"/>
		<result property="pet_type" column="pet_type"/>
		<result property="visit_date" column="visit_date"/>
		<result property="visit_is_new" column="visit_is_new"/>
		<result property="cmt_id" column="cmt_id"/>
		<result property="cmt_content" column="cmt_content"/>
		<result property="cmt_reg_date" column="cmt_reg_date"/>
	</resultMap>

	<!-- 후기 입력하기 -->
	<insert id="insertReview" parameterType="ReviewVO" useGeneratedKeys="true" keyProperty="rv_id">
			INSERT INTO 
				review(hpt_id, hpt_rate, rv_title, rv_content, rv_image, pet_type, visit_date, visit_is_new)
			VALUES
				(#{hpt_id}, #{hpt_rate}, #{rv_title}, #{rv_content}, #{rv_image}, #{pet_type}, #{visit_date}, #{visit_is_new})
	</insert>
	<!-- AJAX로 랜덤 후기 등록 -->
	<insert id="insertReviewAjax" parameterType="ReviewVO">
			INSERT INTO 
				review(hpt_id, hpt_rate, rv_title, rv_content, rv_image, pet_type, visit_date, visit_is_new)
			VALUES
				(#{hpt_id}, #{hpt_rate}, #{rv_title}, #{rv_content}, #{rv_image}, #{pet_type}, #{visit_date}, #{visit_is_new})
	</insert>
	<!-- //AJAX로 랜덤 후기 등록 -->
	
	<!-- 웹에서 후기 리스트 (병원별 X, 전체)-->
	<select id="reviewListForWeb" parameterType="searchVO" resultType="egovMap">
			SELECT
				rv.rv_id, rv.hpt_id, rv.rv_title, rv.rv_content, rv.hpt_rate, rv.rv_reg_date, 
				rv.rv_image, rv.pet_type, rv.visit_date, rv.visit_is_new,
				hos.hpt_name, geo.adrs_old, geo.adrs_new
			FROM review rv
			JOIN hospital hos 
			ON hos.hpt_id = rv.hpt_id
			JOIN hospital_geo as geo ON rv.hpt_id = geo.hpt_id
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND rv.rv_title LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
		            <when test="searchCondition == 1">
						AND	hos.hpt_name LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
		            <when test="searchCondition == 2">
						AND	(geo.adrs_new LIKE CONCAT('%', #{searchKeyword}, '%') OR geo.adrs_old LIKE CONCAT('%', #{searchKeyword}, '%'))
					</when>
				</choose>
			</if>
			ORDER BY rv_id desc
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>
	
	<!-- 웹 후기 리스트 카운트 -->
	<select id="selectReviewListTotCnt" parameterType="searchVO" resultType="int">
			SELECT COUNT(*) totcnt
			FROM review rv
			JOIN hospital hos 
			ON hos.hpt_id = rv.hpt_id
			JOIN hospital_geo as geo ON rv.hpt_id = geo.hpt_id
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND rv.rv_title LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
		            <when test="searchCondition == 1">
						AND	hos.hpt_name LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
		            <when test="searchCondition == 2">
						AND	(geo.adrs_new LIKE CONCAT('%', #{searchKeyword}, '%') OR geo.adrs_old LIKE CONCAT('%', #{searchKeyword}, '%'))
					</when>
				</choose>
			</if>
	</select>

	<!-- 앱 사용자 용  -->
	<update id="updateReview">

			UPDATE review
			SET hpt_rate=#{hpt_rate}, rv_title=#{rv_title}, rv_content=#{rv_content}, rv_image=#{rv_image}, pet_type=#{pet_type}, visit_date=#{visit_date}, visit_is_new=#{visit_is_new}
			WHERE rv_id=#{rv_id}

	</update>

	<delete id="deleteReview">

			DELETE FROM review
			WHERE rv_id=#{rv_id}

	</delete>

	<select id="selectReview" resultMap="review">

			SELECT
				rv.rv_id, rv.hpt_id, rv.rv_title, rv.rv_content, rv.hpt_rate, rv.rv_reg_date, 
				rv.rv_image, rv.pet_type, rv.visit_date, rv.visit_is_new,
				hos.hpt_name, geo.adrs_old, geo.adrs_new
			FROM review rv
			JOIN hospital hos 
			ON hos.hpt_id = rv.hpt_id
			JOIN hospital_geo as geo ON rv.hpt_id = geo.hpt_id
			WHERE rv.rv_id = #{rv.rv_id}

	</select>
	
	
	
	
	
	
	
	<!-- 후기 리스트 -->
	<select id="reviewList" resultType="egovMap">
			SELECT
				rv_id, hpt_id, rv_title, rv_content, hpt_rate,
				DATE_FORMAT(rv_reg_date, '%Y-%m-%d') AS rv_reg_date, 
				rv_image, pet_type, visit_date, visit_is_new
			FROM
				review
			WHERE 
				hpt_id=#{hpt_id}
			ORDER BY
				rv_id DESC
	</select>
	
	<!-- 후기 리스트 3개만 -->
	<select id="reviewListThree" resultType="egovMap">
			SELECT
				rv_id, hpt_id, rv_title, rv_content, 
				DATE_FORMAT(rv_reg_date, '%Y-%m-%d') AS rv_reg_date, 
				rv_image, pet_type, visit_date, visit_is_new
			FROM
				review
			WHERE 
				hpt_id=#{hpt_id}
			ORDER BY
				rv_id DESC
			LIMIT 0,3
	</select>
	
	<!-- 후기 상세 보기 -->
	<select id="reviewDetail" resultType="egovMap">
			SELECT
				rv_id, hpt_id, hpt_rate, rv_title, rv_content, 
				DATE_FORMAT(rv_reg_date, '%Y-%m-%d') AS rv_reg_date, 
				rv_image, pet_type, visit_date, visit_is_new
			FROM
				review
			WHERE 
				rv_id=#{rv_id}
	</select>
	
	<!-- 후기의 댓글 목록 -->
	<select id="commentList" parameterType="int" resultType="egovMap">
			SELECT 
				cmt_id, cmt_content, 
				DATE_FORMAT(cmt_reg_date, '%Y-%m-%d %H:%i') AS cmt_reg_date
			FROM
				review_comment
			WHERE
				rv_id=#{rv_id}
			ORDER BY
				cmt_id DESC
	</select>
	
	<!-- 후기에 댓글 쓰기 -->
	<insert id="insertComment" parameterType="ReviewVO">
		INSERT INTO 
			review_comment (cmt_content, rv_id)
		VALUES 
			(#{cmt_content}, #{rv_id})
	</insert>
	
	<!-- 후기 댓글 삭제 -->
	<delete id="deleteComment" parameterType="int">
		DELETE FROM
			review_comment
		WHERE
			cmt_id = #{cmt_id}
	</delete>
</mapper>